import './App.css'
import { products as initialProducts } from './mocks/products.json'
import { Products } from './components/Products.jsx'
import { useState } from 'react'
import { Header } from './components/Header.jsx'
import { Footer } from './components/Footer.jsx'
import { IS_DEVELOPMENT } from './config.js'
import { useFilters } from './hooks/useFilters.js'
//import { useContext } from useContext(context: React.Context<any>)


function App() {
  const [products] = useState(initialProducts)
  const { filters, filterProducts, setFilters} = useFilters()
  const filteredProducts = filterProducts(products)
  return (
    <>
      <h1>Shopping Cart</h1>
      <Header changeFilters={setFilters} />   // se dejara solo <Header />
      <Products products={filteredProducts} />
      {IS_DEVELOPMENT && <Footer filters={filters} />}
    </>
  )
}
export default App

// en Header estaba 
import { Filters } from './Filters.jsx'
export function Header({ changeFilters }) {
    return (
        <header>
            <h1>React Shop</h1>
            <Filters onChange={changeFilters} />
        </header>
    )
}
// se quito changeFilters

Despues en Filters
export function Filters() {
    //const { filters, setFilters } = useFilters()
    const { setFilters } = useFilters()

    se hace el cambio de onChange x setFilters en los dos handleChange
    que tiene en componente
    
